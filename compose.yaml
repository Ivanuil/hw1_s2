version: "3"

services:

  hs1_s2:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  postgres:
    image: postgres:14.7
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    volumes:
      - minio-data:/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: sender
    volumes:
      - ./environment/mongo/mongo-init.js:/docker-entrypoint.d/mongo-init.js:ro
      - mongo-data:/data/db
      - mongo-config:/data/configdb

  redis:
    image: redis:7.2-rc-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
#    command:
#      - redis-server --save 20 1 --logLevel warning --requirepass YXNkZmFzZGY=
    volumes:
      - redis-data:/data

volumes:
  db-data:
  minio-data:
  redis-data:
  mongo-data:
  mongo-config:
